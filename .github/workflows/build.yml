name: build

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
    outputs:
      semVer:
        value: ${{ jobs.build.outputs.semVer }}
    secrets:
      token:
        required: true

env:
   Configuration: ${{ inputs.configuration }}

jobs:
 build:
    # runs-on: windows-latest
    runs-on: self-hosted
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
    - name: Set git core.longpaths flag
      run: git config --global core.longpaths true

    - name: Checkout
      uses: actions/checkout@v1

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: '5.12.0'

    - name: Determine AssemblyInfo Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
        updateAssemblyInfo: true

    - name: Determine Projects Version
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
        additionalArguments: '/updateprojectfiles'

    - name: Set version for VSIX
      run: |
        $dirPath = 'src'
        $manifestFiles = Get-ChildItem -Path $dirPath -Filter source.extension.vsixmanifest -Recurse
        foreach ($manifestPath in $manifestFiles) {
          $manifestXml = [xml](Get-Content $manifestPath.FullName -Raw)
          $manifestXml.PackageManifest.Metadata.Identity.Version = $env:GitVersion_AssemblySemVer
          $manifestXml.Save($manifestPath.FullName)
        }

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
        vs-prerelease: true

    - name: Setup NuGet.exe
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: latest

    - name: Restore NuGet
      run: nuget restore VSTranslations.sln

    - name: Build Solution
      run: |
        msbuild.exe VSTranslations.sln /p:Configuration=$env:Configuration /p:Platform="Any CPU" /p:DeployExtension=false

    - name: Run Tests
      run: |
        dotnet test VSTranslations.sln --no-build --no-restore --verbosity normal --collect:"XPlat Code Coverage" /p:Configuration=$env:Configuration /p:Platform="Any CPU"

    - name: Coverage Report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.19
      with:
        reports: tests\**\coverage.cobertura.xml
        targetdir: coveragereport
        reporttypes: Html;Badges

    - name: Create Artifacts directory
      run: |
        New-Item -ItemType Directory -Force -Path artifacts

    - name: Copy files to Artifacts
      run: |
        Get-ChildItem -Path src -Include *.vsix -Recurse | Copy-Item -Destination artifacts

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: VSTranslations.${{ env.GITVERSION_SEMVER }}
        path: |
          artifacts/*.vsix